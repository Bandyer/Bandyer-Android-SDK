/*
 * Copyright (C) 2020 Bandyer S.r.l. All Rights Reserved.
 * See LICENSE.txt for licensing information
 */

plugins {
    id "com.android.application"
    id "kotlin-android"
    id "com.github.triplet.play"
    id "com.google.firebase.appdistribution"
    id "ru.cian.huawei-publish"
    id "com.google.firebase.crashlytics"
}

apply from: 'versions.gradle'
apply from: '../scripts/apply_dependencies.gradle'

def bandyerLibVersion = "3.10.0"

android {

    compileSdkVersion sampleAppCatalog.versions.sampleAppSdkVersion.get().toInteger()
    buildToolsVersion sampleAppCatalog.versions.sampleAppToolsVersion.get()

    defaultConfig {
        applicationId "com.bandyer.demo_android_sdk"
        minSdkVersion sampleAppCatalog.versions.sampleAppMinSdkVersion.get().toInteger()
        targetSdkVersion sampleAppCatalog.versions.sampleAppSdkVersion.get().toInteger()
        versionCode VERSION_CODE.toInteger()
        versionName bandyerLibVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        debug {
            if (keyStoreFilePath(name)?.trim()) {
                keyAlias keyStoreAlias(name)
                keyPassword keyStorePassword(name)
                storeFile file(keyStoreFilePath(name))
                storePassword keyStorePassword(name)
            }
        }
        release {
            if (keyStoreFilePath(name)?.trim()) {
                keyAlias keyStoreAlias(name)
                keyPassword keyStorePassword(name)
                storeFile file(keyStoreFilePath(name))
                storePassword keyStorePassword(name)
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (keyStoreFilePath(name)?.trim()) signingConfig signingConfigs.release
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix '-DEBUG'
            if (keyStoreFilePath(name)?.trim()) signingConfig signingConfigs.debug

            // Firebase distribution
            if (getDistributionCredentialsFilePath(name)?.trim()) firebaseAppDistribution {
                appId getDistributionAppId(name)
                serviceCredentialsFile getDistributionCredentialsFilePath(name)
                releaseNotes getDistributionReleaseNotes(bandyerLibVersion)
                groups getDistributionTestGroup()
            }
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    ndkVersion "23.1.7779620"
}

play {
    def canPublish = !playStoreCredentialsFilePath()?.trim().allWhitespace
    if (canPublish) serviceAccountCredentials = file(playStoreCredentialsFilePath())
    track.set("beta")
    enabled.set(canPublish)
    defaultToAppBundles.set(true)
}

huaweiPublish {
    instances {
        release {
            credentialsPath = getHmsDistributionCredentialsFilePath()
            buildFormat = "aab"
        }
    }
}

dependencies {
    /*** Bandyer Android SDK ***/
    implementation(platform("com.bandyer:bandyer-android-sdk-bom:$bandyerLibVersion"))

    implementation "com.bandyer:bandyer-android-sdk:$bandyerLibVersion"

    // define this dependency only if you desire to handle usb camera input in a video call
    implementation "com.bandyer:extension_usb_camera"

    // define this dependency only if you desire to handle virtual backgrounds in a video call
    implementation "com.bandyer:extension_virtual_background"
}
