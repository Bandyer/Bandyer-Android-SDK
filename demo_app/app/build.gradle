/*
 * Copyright (C) 2018 Bandyer S.r.l. All Rights Reserved.
 * See LICENSE.txt for licensing information
 */

buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'gradle.plugin.com.onesignal:onesignal-gradle-plugin:[0.12.2, 0.99.99]'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


def gsonVersion = "2.8.2"
def okHttpVersion = "3.11.0"
def stethoVersion = "1.5.1"
def retrofitVersion = "2.4.0"
def leakCanaryVersion = "1.6.2"
def butterKnifeVersion = "8.8.1"
def fastAdapterVersion = "3.2.9"
def picassoLibVersion = "2.71828"
def jUnitLibVersion = "4.12"
def multiDexLibVersion = "1.0.3"
def crashlyticsLibVersion = "2.10.1"
def oneSignalLibVersion = "[3.10.5, 3.99.99]"

def bandyerLibVersion = "1.2.1"

android {
    compileSdkVersion sdkVersion
    buildToolsVersion buildToolsVersion
    defaultConfig {
        applicationId "com.bandyer.demo_android_sdk"
        minSdkVersion 16
        targetSdkVersion sdkVersion
        versionCode 1
        versionName bandyerLibVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [
                // One Signal
                onesignal_app_id               : '40440a25-ca9a-488f-9728-f2def9db028c',
                // Project number pulled from dashboard, local value is ignored.
                onesignal_google_project_number: 'REMOTE',

                // Fabric api key
                fabric_api_key                 : 'c7e3f91402fbe3f7c592ced16a51c945c9a1bdc5'
        ]
        multiDexEnabled true
    }

    dexOptions {
        preDexLibraries = false
    }

    signingConfigs {
        release {
            keyAlias keyStoreAlias
            keyPassword keyStorePassword
            storeFile file(keyStoreFilePath)
            storePassword keyStorePassword
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (keyStoreFilePath?.trim()) signingConfig signingConfigs.release
            ext.betaDistributionReleaseNotes = fabricReleaseNotes()
            ext.betaDistributionGroupAliases = fabricTestGroup()
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // Optionally configures multiple APKs based on screen density and cpu architecture.
    // For further information see: https://developer.android.com/studio/build/configure-apk-splits
    splits {

        abi {
            enable true
            include 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
            universalApk true
        }

        // Optionally configures multiple APKs based on screen density.
        density {
            enable true
            compatibleScreens 'small', 'normal', 'large', 'xlarge'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    /*** Platform ***/
    implementation "com.android.support:multidex:$multiDexLibVersion"
    implementation("com.android.support:appcompat-v7:$supportLibVersion") {
        exclude group: 'com.android.support', module: 'animated-vector-drawable'
        exclude group: 'com.android.support', module: 'support-vector-drawable'
        exclude group: 'com.android.support', module: 'exit-interface'
    }

    implementation("com.android.support:design:$supportLibVersion") {
        exclude group: 'com.android.support', module: 'animated-vector-drawable'
        exclude group: 'com.android.support', module: 'support-vector-drawable'
        exclude group: 'com.android.support', module: 'exit-interface'
    }

    implementation("com.android.support:recyclerview-v7:$supportLibVersion") {
        exclude group: 'com.android.support', module: 'animated-vector-drawable'
        exclude group: 'com.android.support', module: 'support-vector-drawable'
        exclude group: 'com.android.support', module: 'exit-interface'
    }

    //***  Testing ***/
    testImplementation "junit:junit:$jUnitLibVersion"

    //*** Networking ***/
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"

    implementation "com.facebook.stetho:stetho:$stethoVersion"
    implementation "com.facebook.stetho:stetho-okhttp3:$stethoVersion"

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    /*** Utility ***/
    annotationProcessor "android.arch.lifecycle:compiler:$archLifecycleVersion"
    implementation "android.arch.lifecycle:extensions:$archLifecycleVersion"

    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    /*** UI ***/
    implementation "com.mikepenz:fastadapter:$fastAdapterVersion"
    implementation "com.mikepenz:fastadapter-extensions:$fastAdapterVersion"
    implementation "com.mikepenz:fastadapter-commons:$fastAdapterVersion"
    implementation "com.squareup.picasso:picasso:$picassoLibVersion"

    /*** OneSignal ***/
    implementation "com.onesignal:OneSignal:$oneSignalLibVersion"

    /*** Fabric Crashlytics ***/
    implementation "com.crashlytics.sdk.android:crashlytics:$crashlyticsLibVersion"

    /*** Bandyer Android SDK ***/
    implementation "com.bandyer:bandyer-android-sdk:$bandyerLibVersion"
}


/**
 * The following code is used to release the demo App on fabric
 * This code is also prepared to be tweaked to support different flavors
 */
File crashlyticsProperties = new File("${project.projectDir.absolutePath}/fabric.properties")

android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        // Filter is null for universal APKs.
        def filter = output.getFilter(com.android.build.OutputFile.ABI)

        if (filter == null) {

            def variantSuffix = variant.name.capitalize()

            def generatePropertiesTask = task("crashlyticsGenerateProperties${variantSuffix}") {
                doLast {
                    Properties properties = new Properties()
                    properties.put("apiSecret", fabricApiSecret())
                    println "Setting apiSecret: ${fabricApiSecret()} to fabric.properties"
                    properties.store(new FileWriter(crashlyticsProperties), "")
                }
            }

            def removePropertiesTask = task("crashlyticsRemoveProperties${variantSuffix}") {
                doLast {
                    println "Removing fabric.properties"
                    crashlyticsProperties.delete()
                }
            }

            tasks.findAll {
                it.name.startsWith(
                        "crashlyticsUploadDistribution${variantSuffix}")
            }.each {
                it.dependsOn generatePropertiesTask
                it.finalizedBy removePropertiesTask
                it.doFirst {
                    ext.betaDistributionApkFilePath = output.outputFile.absolutePath
                }
            }

            tasks.findAll {
                it.name.startsWith(
                        "crashlyticsUploadSymbols${variantSuffix}")
            }.each {
                it.doFirst {
                    ext.betaDistributionApkFilePath = output.outputFile.absolutePath
                }
            }
        }
    }
}